#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏
"""

import requests
import json
import time
from datetime import datetime

def test_channel_discovery():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤"""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ë–ù–ê–†–£–ñ–ï–ù–ò–Ø –ö–ê–ù–ê–õ–û–í")
    print("="*50)
    print(f"–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("="*50)
    
    # URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    base_url = "http://localhost:8000"
    discover_url = f"{base_url}/api/v1/channels/discover"
    
    try:
        print("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...")
        response = requests.get(f"{base_url}/docs", timeout=5)
        if response.status_code == 200:
            print("   ‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"   ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {e}")
        return False
    
    try:
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /channels/discover...")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤
        response = requests.post(
            discover_url,
            headers={"Content-Type": "application/json"},
            json={},
            timeout=30
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("   ‚úÖ –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ë–ù–ê–†–£–ñ–ï–ù–ò–Ø:")
            print(f"   –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ: {result['data']['total_channels_discovered']}")
            print(f"   –ö–∞–Ω–∞–ª–æ–≤ —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏: {result['data']['channels_with_signals']}")
            print(f"   –°–∏–≥–Ω–∞–ª–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {result['data']['total_signals_added']}")
            
            if result['data']['added_channels']:
                print(f"\nüì∫ –î–û–ë–ê–í–õ–ï–ù–ù–´–ï –ö–ê–ù–ê–õ–´:")
                for channel in result['data']['added_channels']:
                    print(f"   - {channel['name']} (@{channel['username']}) - {channel['type']}")
            
            if result['data']['added_signals']:
                print(f"\nüìà –î–û–ë–ê–í–õ–ï–ù–ù–´–ï –°–ò–ì–ù–ê–õ–´:")
                for signal in result['data']['added_signals']:
                    print(f"   - {signal['symbol']} {signal['signal_type'].upper()} –∏–∑ {signal['source']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ TelegramService –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 3 –∫–∞–Ω–∞–ª–∞
            expected_channels = 3
            actual_channels = result['data']['total_channels_discovered']
            
            if actual_channels == expected_channels:
                print(f"\n‚úÖ –û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤: {expected_channels}")
                print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {actual_channels}")
            else:
                print(f"\n‚ö†Ô∏è –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–Ω–∞–ª–æ–≤:")
                print(f"   –û–∂–∏–¥–∞–ª–æ—Å—å: {expected_channels}")
                print(f"   –ü–æ–ª—É—á–µ–Ω–æ: {actual_channels}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ SignalValidationService –Ω–∞—à–µ–ª —Å–∏–≥–Ω–∞–ª—ã
            if result['data']['channels_with_signals'] > 0:
                print(f"\n‚úÖ SignalValidationService —É—Å–ø–µ—à–Ω–æ –Ω–∞—à–µ–ª —Å–∏–≥–Ω–∞–ª—ã –≤ –∫–∞–Ω–∞–ª–∞—Ö!")
            else:
                print(f"\n‚ùå SignalValidationService –Ω–µ –Ω–∞—à–µ–ª —Å–∏–≥–Ω–∞–ª—ã –≤ –∫–∞–Ω–∞–ª–∞—Ö")
            
            return True
            
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}")
            try:
                error_detail = response.json()
                print(f"   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_detail}")
            except:
                print(f"   –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False
    except json.JSONDecodeError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç–≤–µ—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_api_documentation():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"""
    
    print("\nüìö –ü–†–û–í–ï–†–ö–ê API –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò")
    print("="*50)
    
    try:
        response = requests.get("http://localhost:8000/docs", timeout=5)
        
        if response.status_code == 200:
            print("   ‚úÖ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
            print("   üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:8000/docs")
            print("   üîç –ù–∞–π–¥–∏—Ç–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç: POST /channels/discover")
            print("   üß™ –ù–∞–∂–º–∏—Ç–µ 'Try it out' –∏ –∑–∞—Ç–µ–º 'Execute'")
            return True
        else:
            print(f"   ‚ùå API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –û–ë–ù–ê–†–£–ñ–ï–ù–ò–Ø –ö–ê–ù–ê–õ–û–í")
    print("="*60)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    docs_ok = test_api_documentation()
    
    # –¢–µ—Å—Ç 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    discovery_ok = test_channel_discovery()
    
    print("\n" + "="*60)
    print("üìã –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("="*60)
    
    if docs_ok and discovery_ok:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
        print("   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
        print("   - –≠–Ω–¥–ø–æ–∏–Ω—Ç /channels/discover —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("   - TelegramService –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª—ã")
        print("   - SignalValidationService –Ω–∞—Ö–æ–¥–∏—Ç —Å–∏–≥–Ω–∞–ª—ã")
        print("   - –ö–∞–Ω–∞–ª—ã –∏ —Å–∏–≥–Ω–∞–ª—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        
    elif docs_ok:
        print("‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•:")
        print("   ‚úÖ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
        print("   ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è")
        
    else:
        print("‚ùå –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´:")
        print("   ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å—é —Å–µ—Ä–≤–µ—Ä–∞")
        print("   ‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é")
    
    print("\n" + "="*60)
    
    return docs_ok and discovery_ok

if __name__ == "__main__":
    try:
        success = main()
        exit_code = 0 if success else 1
        exit(exit_code)
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        exit(1)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        exit(1) 