#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
"""

import requests
import json
import time

def test_api():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –°–ï–†–í–ò–°–û–í")
    print("=" * 50)
    
    # –¢–µ—Å—Ç ML Service
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º ML Service (–ø–æ—Ä—Ç 8001)...")
    try:
        response = requests.get("http://localhost:8001/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ ML Service —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå ML Service –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå ML Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    # –¢–µ—Å—Ç ML Predictions
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º ML Predictions...")
    try:
        response = requests.get("http://localhost:8001/predictions/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ ML Predictions —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            data = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: {len(data) if isinstance(data, list) else 'N/A'}")
        else:
            print(f"‚ùå ML Predictions –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå ML Predictions –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    # –¢–µ—Å—Ç ML Backtesting
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º ML Backtesting...")
    try:
        response = requests.get("http://localhost:8001/backtesting/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ ML Backtesting —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            data = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(data) if isinstance(data, list) else 'N/A'}")
        else:
            print(f"‚ùå ML Backtesting –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå ML Backtesting –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    # –¢–µ—Å—Ç ML Risk Analysis
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º ML Risk Analysis...")
    try:
        response = requests.get("http://localhost:8001/risk_analysis/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ ML Risk Analysis —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            data = response.json()
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–æ–≤: {len(data) if isinstance(data, list) else 'N/A'}")
        else:
            print(f"‚ùå ML Risk Analysis –æ—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå ML Risk Analysis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    print("‚úÖ Frontend: http://localhost:3001")
    print("‚úÖ ML Service: http://localhost:8001")
    print("‚úÖ ML Docs: http://localhost:8001/docs")
    print("\nüöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏!")

if __name__ == "__main__":
    test_api() 