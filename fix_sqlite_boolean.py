#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è NULL –∑–Ω–∞—á–µ–Ω–∏–π –≤ boolean –ø–æ–ª—è—Ö SQLite
"""
import sqlite3
import os

def fix_sqlite_boolean_fields():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç NULL –∑–Ω–∞—á–µ–Ω–∏—è –≤ boolean –ø–æ–ª—è—Ö –≤ SQLite"""
    db_path = "crypto_analytics.db"
    
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(signals)")
        columns = cursor.fetchall()
        print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã signals:")
        for col in columns:
            print(f"  {col[1]} ({col[2]}) - nullable: {col[3]}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º NULL –∑–Ω–∞—á–µ–Ω–∏—è –≤ boolean –ø–æ–ª—è—Ö
        cursor.execute("""
            UPDATE signals 
            SET reached_tp1 = 0, reached_tp2 = 0, reached_tp3 = 0, hit_stop_loss = 0 
            WHERE reached_tp1 IS NULL OR reached_tp2 IS NULL OR reached_tp3 IS NULL OR hit_stop_loss IS NULL
        """)
        
        updated_count = cursor.rowcount
        conn.commit()
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ signals")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("""
            SELECT COUNT(*) FROM signals 
            WHERE reached_tp1 IS NULL OR reached_tp2 IS NULL OR reached_tp3 IS NULL OR hit_stop_loss IS NULL
        """)
        null_count = cursor.fetchone()[0]
        
        if null_count == 0:
            print("‚úÖ –í—Å–µ boolean –ø–æ–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
        else:
            print(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–æ—Å—å {null_count} –∑–∞–ø–∏—Å–µ–π —Å NULL –∑–Ω–∞—á–µ–Ω–∏—è–º–∏")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("SELECT COUNT(*) FROM signals")
        total_signals = cursor.fetchone()[0]
        print(f"üìä –í—Å–µ–≥–æ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ –±–∞–∑–µ: {total_signals}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    fix_sqlite_boolean_fields()
