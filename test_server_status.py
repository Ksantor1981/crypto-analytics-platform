#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤
"""

import asyncio
import httpx
import time
from typing import Dict, Any

async def check_server_status(url: str, service_name: str) -> Dict[str, Any]:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        async with httpx.AsyncClient(timeout=5.0) as client:
            response = await client.get(url)
            
            if response.status_code == 200:
                return {
                    "service": service_name,
                    "status": "‚úÖ –†–ê–ë–û–¢–ê–ï–¢",
                    "url": url,
                    "response_time": response.elapsed.total_seconds(),
                    "data": response.json() if response.headers.get('content-type', '').startswith('application/json') else None
                }
            else:
                return {
                    "service": service_name,
                    "status": f"‚ùå –û–®–ò–ë–ö–ê {response.status_code}",
                    "url": url,
                    "error": response.text
                }
    except Exception as e:
        return {
            "service": service_name,
            "status": "‚ùå –ù–ï–î–û–°–¢–£–ü–ï–ù",
            "url": url,
            "error": str(e)
        }

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤...")
    print("=" * 60)
    
    # –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    servers = [
        ("http://localhost:8000/docs", "Backend API"),
        ("http://localhost:8001/docs", "ML Service"),
        ("http://localhost:8000/api/v1/health", "Backend Health"),
        ("http://localhost:8001/api/v1/health/", "ML Service Health")
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Å–µ—Ä–≤–µ—Ä
    for url, service_name in servers:
        result = await check_server_status(url, service_name)
        
        print(f"üìä {result['service']}: {result['status']}")
        print(f"   URL: {result['url']}")
        
        if 'response_time' in result:
            print(f"   –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {result['response_time']:.3f}s")
        
        if 'error' in result:
            print(f"   –û—à–∏–±–∫–∞: {result['error']}")
        
        print()
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await asyncio.sleep(0.5)
    
    print("=" * 60)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    asyncio.run(main()) 