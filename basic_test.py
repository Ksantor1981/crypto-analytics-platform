#!/usr/bin/env python3
"""
–ë–∞–∑–æ–≤—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
"""

import requests
import sqlite3
from datetime import datetime

def test_services():
    """–¢–µ—Å—Ç –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("üöÄ –ë–ê–ó–û–í–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´")
    print("=" * 40)
    print(f"–í—Ä–µ–º—è: {datetime.now()}")
    print("=" * 40)
    
    # –¢–µ—Å—Ç 1: ML —Å–µ—Ä–≤–∏—Å
    print("\n1Ô∏è‚É£ ML —Å–µ—Ä–≤–∏—Å:")
    try:
        response = requests.get("http://localhost:8001/health", timeout=5)
        if response.status_code == 200:
            print("   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: Backend
    print("\n2Ô∏è‚É£ Backend:")
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code == 200:
            print("   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    print("\n3Ô∏è‚É£ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:")
    try:
        conn = sqlite3.connect('backend/crypto_analytics.db')
        cursor = conn.cursor()
        
        cursor.execute("SELECT COUNT(*) FROM signals")
        signals = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM channels")
        channels = cursor.fetchone()[0]
        
        conn.close()
        
        print(f"   ‚úÖ –°–∏–≥–Ω–∞–ª–æ–≤: {signals}, –ö–∞–Ω–∞–ª–æ–≤: {channels}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: ML –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    print("\n4Ô∏è‚É£ ML –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ:")
    try:
        test_data = {
            "asset": "BTC",
            "entry_price": 45000,
            "target_price": 46500,
            "stop_loss": 43500,
            "direction": "LONG"
        }
        
        response = requests.post(
            "http://localhost:8001/api/v1/predictions/predict",
            json=test_data,
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"   ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('prediction', 'N/A')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 40)
    print("‚úÖ –ë–ê–ó–û–í–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("=" * 40)

if __name__ == "__main__":
    test_services()
