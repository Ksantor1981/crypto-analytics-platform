#!/usr/bin/env python3
"""
–°–±–æ—Ä –†–ï–ê–õ–¨–ù–´–• –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
–û–±—Ö–æ–¥–∏—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
"""
import os
import sqlite3
import json
import re
from datetime import datetime, timezone
from pathlib import Path

def load_env():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞"""
    env_path = Path('.env')
    if env_path.exists():
        with open(env_path, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    os.environ[key] = value
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑ .env –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

def create_dockerfile():
    """–°–æ–∑–¥–∞–µ—Ç Dockerfile –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö"""
    dockerfile_content = '''
FROM python:3.11-slim

WORKDIR /app

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
RUN pip install telethon requests

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
COPY telegram_collector.py .

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
ENV TELEGRAM_API_ID=21073808
ENV TELEGRAM_API_HASH=2e3adb8940912dd295fe20c1d2ce5368

# –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä—â–∏–∫–∞
CMD ["python", "telegram_collector.py"]
'''
    
    with open('Dockerfile.collector', 'w') as f:
        f.write(dockerfile_content)
    
    print("‚úÖ Dockerfile —Å–æ–∑–¥–∞–Ω")

def create_telegram_collector():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö"""
    collector_content = '''
#!/usr/bin/env python3
"""
–°–±–æ—Ä—â–∏–∫ –†–ï–ê–õ–¨–ù–´–• –¥–∞–Ω–Ω—ã—Ö –∏–∑ Telegram
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
"""
import os
import asyncio
import json
import re
from datetime import datetime, timezone
from telethon import TelegramClient

# –ö–∞–Ω–∞–ª—ã –¥–ª—è —Å–±–æ—Ä–∞
CHANNELS = [
    'CryptoPapa', 'FatPigSignals', 'WallstreetQueenOfficial',
    'RocketWalletSignals', 'BinanceKiller', 'WolfOfTrading'
]

async def collect_signals():
    """–°–æ–±–∏—Ä–∞–µ—Ç —Å–∏–≥–Ω–∞–ª—ã –∏–∑ Telegram"""
    api_id = os.environ.get('TELEGRAM_API_ID')
    api_hash = os.environ.get('TELEGRAM_API_HASH')
    
    if not api_id or not api_hash:
        print("‚ùå API –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        return []
    
    client = TelegramClient('session', api_id, api_hash)
    
    try:
        await client.start()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å–ø–µ—à–Ω–æ")
        
        signals = []
        
        for channel in CHANNELS:
            try:
                print(f"üìä –°–±–æ—Ä –∏–∑ {channel}...")
                entity = await client.get_entity(channel)
                messages = await client.get_messages(entity, limit=50)
                
                for msg in messages:
                    if msg.text:
                        signal = extract_signal(msg.text, channel)
                        if signal:
                            signals.append(signal)
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –∏–∑ {channel}: {e}")
        
        await client.disconnect()
        return signals
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return []

def extract_signal(text, channel):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å–∏–≥–Ω–∞–ª –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    # –ü—Ä–æ—Å—Ç—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
    patterns = [
        r'BTC.*?(\\d{4,6}).*?(\\d{4,6})',
        r'ETH.*?(\\d{3,5}).*?(\\d{3,5})',
        r'SOL.*?(\\d{2,4}).*?(\\d{2,4})'
    ]
    
    for pattern in patterns:
        matches = re.findall(pattern, text.upper())
        for match in matches:
            if len(match) == 2:
                try:
                    entry = float(match[0])
                    target = float(match[1])
                    
                    if entry > 0 and target > 0:
                        return {
                            'asset': 'BTC' if 'BTC' in text.upper() else 'ETH' if 'ETH' in text.upper() else 'SOL',
                            'entry_price': entry,
                            'target_price': target,
                            'direction': 'LONG' if target > entry else 'SHORT',
                            'channel': channel,
                            'timestamp': datetime.now(timezone.utc).isoformat()
                        }
                except:
                    continue
    
    return None

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–±–æ—Ä –†–ï–ê–õ–¨–ù–´–• –¥–∞–Ω–Ω—ã—Ö –∏–∑ Telegram...")
    
    signals = await collect_signals()
    
    print(f"‚úÖ –°–æ–±—Ä–∞–Ω–æ {len(signals)} —Å–∏–≥–Ω–∞–ª–æ–≤")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON
    with open('/app/signals.json', 'w') as f:
        json.dump(signals, f, indent=2)
    
    print("üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ signals.json")

if __name__ == '__main__':
    asyncio.run(main())
'''
    
    with open('telegram_collector.py', 'w') as f:
        f.write(collector_content)
    
    print("‚úÖ –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä—â–∏–∫–∞ —Å–æ–∑–¥–∞–Ω")

def create_docker_commands():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Docker"""
    commands = '''
# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ PowerShell:

# 1. –°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞–∑
docker build -f Dockerfile.collector -t telegram-collector .

# 2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
docker run --rm -v ${PWD}:/app telegram-collector

# 3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
docker run --rm -v ${PWD}:/app telegram-collector cat /app/signals.json
'''
    
    with open('docker_commands.txt', 'w') as f:
        f.write(commands)
    
    print("‚úÖ –ö–æ–º–∞–Ω–¥—ã Docker —Å–æ–∑–¥–∞–Ω—ã")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –°–û–ó–î–ê–ù–ò–ï DOCKER –†–ï–®–ï–ù–ò–Ø")
    print("=" * 40)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ .env
    load_env()
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã
    create_dockerfile()
    create_telegram_collector()
    create_docker_commands()
    
    print("\nüéâ –ì–æ—Ç–æ–≤–æ!")
    print("\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ PowerShell")
    print("2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ docker_commands.txt")
    print("3. –ü–æ–ª—É—á–∏—Ç–µ –†–ï–ê–õ–¨–ù–´–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram")

if __name__ == '__main__':
    main()
