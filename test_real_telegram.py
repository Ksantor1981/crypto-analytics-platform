#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–µ–∞–ª—å–Ω—ã–º Telegram –∫–∞–Ω–∞–ª–∞–º
"""

import sys
import os
import asyncio
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.join(os.path.dirname(__file__), 'workers'))

async def test_telegram_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram"""
    print("üîç –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...")
    
    try:
        from workers.telegram.telegram_client import TelegramSignalCollector
        from workers.real_data_config import REAL_TELEGRAM_CHANNELS
        
        print(f"üì° –ù–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {len(REAL_TELEGRAM_CHANNELS)}")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä —Å —Ä–µ–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        collector = TelegramSignalCollector(use_real_config=True)
        
        print("üîê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞...")
        if await collector.initialize_client():
            print("‚úÖ –ö–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª–∞–º
            print("üì∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–æ–≤...")
            for channel in REAL_TELEGRAM_CHANNELS[:3]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞–Ω–∞–ª–∞
                username = channel['username']
                print(f"   –ü—Ä–æ–≤–µ—Ä—è–µ–º {username}...")
                
                try:
                    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ —á–µ—Ä–µ–∑ client
                    if collector.client:
                        entity = await collector.client.get_entity(username)
                        if entity:
                            title = getattr(entity, 'title', 'N/A')
                            participants_count = getattr(entity, 'participants_count', 'N/A')
                            print(f"   ‚úÖ {username}: {title} ({participants_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)")
                        else:
                            print(f"   ‚ö†Ô∏è {username}: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
                    else:
                        print(f"   ‚ö†Ô∏è {username}: –∫–ª–∏–µ–Ω—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                except Exception as e:
                    print(f"   ‚ùå {username}: –æ—à–∏–±–∫–∞ - {e}")
            
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

async def test_signal_collection():
    """–¢–µ—Å—Ç —Å–±–æ—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç —Å–±–æ—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤...")
    
    try:
        from workers.telegram.telegram_client import TelegramSignalCollector
        
        print("üì° –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤...")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ç–æ—Ä –∏ —Å–æ–±–∏—Ä–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
        collector = TelegramSignalCollector(use_real_config=True)
        try:
            result = await collector.collect_signals()
            
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('status', 'unknown')}")
            
            if result.get('signals'):
                print(f"   –°–∏–≥–Ω–∞–ª–æ–≤ —Å–æ–±—Ä–∞–Ω–æ: {len(result['signals'])}")
                for i, signal in enumerate(result['signals'][:3], 1):
                    print(f"   {i}. {signal.get('asset', 'N/A')} {signal.get('direction', 'N/A')} @ ${signal.get('entry_price', 'N/A')}")
                    print(f"      –ö–∞–Ω–∞–ª: {signal.get('channel', 'N/A')}")
                    print(f"      –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {signal.get('confidence', 'N/A')}")
            else:
                print("   –°–∏–≥–Ω–∞–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
            return result.get('status') == 'success'
        finally:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç
            if collector.client:
                await collector.client.disconnect()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–ï–°–¢ –†–ï–ê–õ–¨–ù–´–• TELEGRAM –ö–ê–ù–ê–õ–û–í")
    print("=" * 50)
    print(f"–í—Ä–µ–º—è: {datetime.now()}")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    connection_ok = await test_telegram_connection()
    
    if connection_ok:
        # –¢–µ—Å—Ç —Å–±–æ—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
        collection_ok = await test_signal_collection()
        
        print("\n" + "=" * 50)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
        
        if connection_ok and collection_ok:
            print("üéâ –†–ï–ê–õ–¨–ù–´–ï TELEGRAM –ö–ê–ù–ê–õ–´ –†–ê–ë–û–¢–ê–Æ–¢!")
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: —É—Å–ø–µ—à–Ω–æ")
            print("‚úÖ –°–±–æ—Ä —Å–∏–≥–Ω–∞–ª–æ–≤: —Ä–∞–±–æ—Ç–∞–µ—Ç")
        elif connection_ok:
            print("‚ö†Ô∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Å–±–æ—Ä —Å–∏–≥–Ω–∞–ª–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: —É—Å–ø–µ—à–Ω–æ")
            print("‚ùå –°–±–æ—Ä —Å–∏–≥–Ω–∞–ª–æ–≤: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º")
            print("‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print("‚ùå –°–±–æ—Ä —Å–∏–≥–Ω–∞–ª–æ–≤: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram")
    
    print("=" * 50)

if __name__ == "__main__":
    asyncio.run(main())
