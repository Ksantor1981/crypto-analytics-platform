#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
"""

import os
import subprocess
import sys

def test_git():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º Git –∫–æ–º–∞–Ω–¥—ã"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Git –∫–æ–º–∞–Ω–¥...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        result = subprocess.run(['git', 'status'], capture_output=True, text=True)
        print(f"Git status: {result.returncode}")
        if result.stdout:
            print("STDOUT:", result.stdout[:200])
        if result.stderr:
            print("STDERR:", result.stderr[:200])
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã
        result = subprocess.run(['git', 'log', '--oneline', '-3'], capture_output=True, text=True)
        print(f"Git log: {result.returncode}")
        if result.stdout:
            print("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã:")
            print(result.stdout)
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º remote
        result = subprocess.run(['git', 'remote', '-v'], capture_output=True, text=True)
        print(f"Git remote: {result.returncode}")
        if result.stdout:
            print("Remote repositories:")
            print(result.stdout)
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_git()
