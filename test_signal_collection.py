#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–±–æ—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏
sys.path.append(os.path.join(os.path.dirname(__file__), 'workers'))

def test_signal_collection():
    """–¢–µ—Å—Ç —Å–±–æ—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤"""
    print("üîç –¢–µ—Å—Ç —Å–±–æ—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–±–æ—Ä–∞
        from workers.telegram.telegram_client import collect_telegram_signals_sync
        
        print("üì° –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä
        result = collect_telegram_signals_sync()
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('status', 'unknown')}")
        
        if result.get('signals'):
            print(f"   –°–∏–≥–Ω–∞–ª–æ–≤ —Å–æ–±—Ä–∞–Ω–æ: {len(result['signals'])}")
            for i, signal in enumerate(result['signals'][:3], 1):
                print(f"   {i}. {signal.get('asset', 'N/A')} {signal.get('direction', 'N/A')} @ ${signal.get('entry_price', 'N/A')}")
        
        return result.get('status') == 'success'
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üöÄ –¢–ï–°–¢ –°–ë–û–†–ê –°–ò–ì–ù–ê–õ–û–í")
    print("=" * 30)
    
    if test_signal_collection():
        print("\n‚úÖ –°–±–æ—Ä —Å–∏–≥–Ω–∞–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print("\n‚ùå –°–±–æ—Ä —Å–∏–≥–Ω–∞–ª–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    print("=" * 30)

if __name__ == "__main__":
    main()
