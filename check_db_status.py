import sqlite3
import json

def check_database():
    try:
        conn = sqlite3.connect('workers/signals.db')
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–æ–≤
        cursor.execute('SELECT COUNT(*) FROM signals')
        signal_count = cursor.fetchone()[0]
        print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ –±–∞–∑–µ: {signal_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(signals)")
        columns = cursor.fetchall()
        print(f"üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã signals ({len(columns)} –∫–æ–ª–æ–Ω–æ–∫):")
        for col in columns:
            print(f"  - {col[1]} ({col[2]})")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å–∏–≥–Ω–∞–ª–∞
        if signal_count > 0:
            cursor.execute('SELECT id, channel, asset, entry_price, target_price, stop_loss, direction, real_confidence, timestamp FROM signals LIMIT 3')
            signals = cursor.fetchall()
            print(f"\nüîç –ü–µ—Ä–≤—ã–µ 3 —Å–∏–≥–Ω–∞–ª–∞:")
            for i, signal in enumerate(signals, 1):
                print(f"  {i}. ID: {signal[0]}, –ö–∞–Ω–∞–ª: {signal[1]}, –ê–∫—Ç–∏–≤: {signal[2]}")
                print(f"     Entry: {signal[3]}, Target: {signal[4]}, Stop: {signal[5]}")
                print(f"     –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {signal[6]}, –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {signal[7]}")
                print(f"     –î–∞—Ç–∞: {signal[8]}")
                print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª—ã
        cursor.execute('SELECT COUNT(*) FROM channel_stats')
        channel_count = cursor.fetchone()[0]
        print(f"üì∫ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤: {channel_count}")
        
        if channel_count > 0:
            cursor.execute('SELECT channel, total_signals, accuracy, avg_profit FROM channel_stats LIMIT 5')
            channels = cursor.fetchall()
            print(f"üìä –¢–æ–ø 5 –∫–∞–Ω–∞–ª–æ–≤:")
            for channel in channels:
                print(f"  - {channel[0]}: {channel[1]} —Å–∏–≥–Ω–∞–ª–æ–≤, —Ç–æ—á–Ω–æ—Å—Ç—å {channel[2]}%, —Å—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å {channel[3]}%")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

if __name__ == "__main__":
    check_database()
