#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞ —Ü–µ–Ω –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
sys.path.append('workers')

from enhanced_price_extractor import EnhancedPriceExtractor

def test_real_telegram_message():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–∑ Telegram"""
    
    extractor = EnhancedPriceExtractor()
    
    # –†–µ–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Telegram
    real_message = "#BTCIf weekly candle closes below 114311 then BTC will look for Daily FVG (110532 - 109241) for a potential bounce however if fails to bounce then daily OB+ (103450 - 98455) But i think at some point of time BTC will test structure breaking WFVG 92880 - 86520 may be in september.In short BTC has a potential to bounce from 110532 for a relief@cryptosignals"
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:")
    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {real_message}")
    print("-" * 80)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ü–µ–Ω—ã
    prices = extractor.extract_prices(real_message)
    print(f"üìä –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ —Ü–µ–Ω—ã:")
    print(f"Entry: {prices['entry_price']}")
    print(f"Target: {prices['target_price']}")
    print(f"Stop Loss: {prices['stop_loss']}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    direction = extractor.extract_direction(real_message)
    print(f"üìà –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∞–∫—Ç–∏–≤
    asset = extractor.extract_asset(real_message)
    print(f"üí∞ –ê–∫—Ç–∏–≤: {asset}")
    
    # –ü–æ–ª–Ω—ã–π —Å–∏–≥–Ω–∞–ª
    signal = extractor.extract_signal(real_message, "cryptosignals", "msg_test")
    print(f"üéØ –ü–æ–ª–Ω—ã–π —Å–∏–≥–Ω–∞–ª:")
    print(f"ID: {signal['id']}")
    print(f"Asset: {signal['asset']}")
    print(f"Direction: {signal['direction']}")
    print(f"Entry: {signal['entry_price']}")
    print(f"Target: {signal['target_price']}")
    print(f"Stop Loss: {signal['stop_loss']}")
    print(f"Confidence: {signal['real_confidence']}")
    print(f"Quality: {signal['signal_quality']}")
    print(f"Valid: {signal['is_valid']}")
    
    return signal

def test_multiple_messages():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–∏–ø–∞—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    extractor = EnhancedPriceExtractor()
    
    test_messages = [
        "#BTCIf weekly candle closes below 114311 then BTC will look for Daily FVG (110532 - 109241) for a potential bounce",
        "ETH LONG Entry: 3000, Target: 3200, Stop Loss: 2950",
        "ADA/USDT: Support Level Test Cardano testing key support level at 0.42. Long entry at 0.45, target 0.55, stop loss at 0.42",
        "SOL SHORT @ 130, TP: 115, SL: 135",
        "Bitcoin SHORT Entry at 50200, Target 48500, Stop Loss 51500"
    ]
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–∞—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:")
    print("=" * 80)
    
    for i, message in enumerate(test_messages, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}:")
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        
        signal = extractor.extract_signal(message, f"test_channel_{i}", f"msg_{i}")
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   Asset: {signal['asset']}")
        print(f"   Direction: {signal['direction']}")
        print(f"   Entry: {signal['entry_price']}")
        print(f"   Target: {signal['target_price']}")
        print(f"   Stop Loss: {signal['stop_loss']}")
        print(f"   Valid: {signal['is_valid']}")
        print("-" * 40)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞ —Ü–µ–Ω...")
    
    # –¢–µ—Å—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    test_real_telegram_message()
    
    # –¢–µ—Å—Ç –Ω–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
    test_multiple_messages()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
