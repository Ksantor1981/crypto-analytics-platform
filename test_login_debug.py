#!/usr/bin/env python3

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from backend.app.services.user_service import UserService
from backend.app.core.database import get_db
from backend.app.core.security import create_user_tokens

def test_login_process():
    """–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—Ö–æ–¥–∞"""
    
    print("üîê –î–ï–¢–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –í–•–û–î–ê")
    print("=" * 50)
    
    db = next(get_db())
    
    try:
        user_service = UserService(db)
        
        email = "test_debug@example.com"
        password = "testpass123"
        
        print(f"üë§ –¢–µ—Å—Ç–∏—Ä—É—é –≤—Ö–æ–¥: {email}")
        
        # –®–∞–≥ 1: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
        print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...")
        user = user_service.authenticate(email, password)
        
        if user:
            print(f"‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞: {user.email} (ID: {user.id})")
            print(f"üìù –ê–∫—Ç–∏–≤–µ–Ω: {user.is_active}")
            print(f"üìù –†–æ–ª—å: {user.role}")
        else:
            print("‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞")
            return False
        
        # –®–∞–≥ 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
        print("2Ô∏è‚É£ –°–æ–∑–¥–∞—é —Ç–æ–∫–µ–Ω—ã...")
        try:
            tokens = create_user_tokens(user)
            print("‚úÖ –¢–æ–∫–µ–Ω—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
            print(f"üìù Access token: {tokens['access_token'][:50]}...")
            print(f"üìù Refresh token: {tokens['refresh_token'][:50]}...")
            print(f"üìù Token type: {tokens['token_type']}")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤: {e}")
            return False
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    finally:
        db.close()

if __name__ == "__main__":
    success = test_login_process()
    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: {'‚úÖ –£–°–ü–ï–•' if success else '‚ùå –ù–ï–£–î–ê–ß–ê'}") 