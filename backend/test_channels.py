#!/usr/bin/env python3
"""
Simple test script for Telegram channels
"""
import requests
import json

def test_telegram_channels():
    base_url = "http://localhost:8000"
    
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –∫–∞–Ω–∞–ª–æ–≤ ===\n")
    
    # Test health endpoint
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint...")
    try:
        response = requests.get(f"{base_url}/health")
        print(f"‚úÖ Health: {response.status_code} - {response.json()}")
    except Exception as e:
        print(f"‚ùå Health error: {e}")
    
    # Test telegram channels endpoint (with DB)
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /api/v1/telegram/channels (—Å –ë–î)...")
    try:
        response = requests.get(f"{base_url}/api/v1/telegram/channels")
        print(f"üìä Channels: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ {data.get('total_channels', 0)} –∫–∞–Ω–∞–ª–æ–≤")
            for channel in data.get('data', []):
                print(f"   - {channel['name']} (@{channel.get('username', 'N/A')}) - {channel['signals_count']} —Å–∏–≥–Ω–∞–ª–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.json()}")
    except Exception as e:
        print(f"‚ùå Channels error: {e}")
    
    # Test telegram channels mock endpoint
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /api/v1/telegram/channels-mock (mock –¥–∞–Ω–Ω—ã–µ)...")
    try:
        response = requests.get(f"{base_url}/api/v1/telegram/channels-mock")
        print(f"üìä Channels Mock: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ {data.get('total_channels', 0)} –∫–∞–Ω–∞–ª–æ–≤ (mock)")
            for channel in data.get('data', []):
                print(f"   - {channel['name']} - {channel['signals_count']} —Å–∏–≥–Ω–∞–ª–æ–≤ (—Ç–æ—á–Ω–æ—Å—Ç—å: {channel['accuracy']}%)")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.json()}")
    except Exception as e:
        print(f"‚ùå Channels Mock error: {e}")
    
    # Test telegram collect signals endpoint
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ —Å–±–æ—Ä–∞ —Å–∏–≥–Ω–∞–ª–æ–≤...")
    try:
        response = requests.get(f"{base_url}/api/v1/telegram/collect-signals-sync")
        print(f"üìä Collect Signals: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°–±–æ—Ä —Å–∏–≥–Ω–∞–ª–æ–≤: {data.get('message', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.json()}")
    except Exception as e:
        print(f"‚ùå Collect Signals error: {e}")
    
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===")

if __name__ == "__main__":
    test_telegram_channels() 