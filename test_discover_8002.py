#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ discover –Ω–∞ –ø–æ—Ä—Ç—É 8002
"""

import requests
import json

def test_discover_endpoint():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ discover"""
    
    print("üß™ –¢–ï–°–¢ –≠–ù–î–ü–û–ò–ù–¢–ê DISCOVER –ù–ê –ü–û–†–¢–£ 8002")
    print("="*50)
    
    url = "http://localhost:8002/api/v1/channels/discover"
    
    try:
        print(f"üì° –û—Ç–ø—Ä–∞–≤–∫–∞ POST –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ {url}")
        
        response = requests.post(
            url,
            headers={"Content-Type": "application/json"},
            json={},
            timeout=10
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("   ‚úÖ –£–°–ü–ï–•!")
            print(f"   –û—Ç–≤–µ—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            data = result.get('data', {})
            print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
            print(f"   –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ: {data.get('total_channels_discovered', 0)}")
            print(f"   –ö–∞–Ω–∞–ª–æ–≤ —Å —Å–∏–≥–Ω–∞–ª–∞–º–∏: {data.get('channels_with_signals', 0)}")
            print(f"   –°–∏–≥–Ω–∞–ª–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {data.get('total_signals_added', 0)}")
            
            if data.get('added_channels'):
                print(f"\nüì∫ –î–û–ë–ê–í–õ–ï–ù–ù–´–ï –ö–ê–ù–ê–õ–´:")
                for channel in data['added_channels']:
                    print(f"   - {channel['name']} (@{channel['username']})")
            
            if data.get('added_signals'):
                print(f"\nüìà –î–û–ë–ê–í–õ–ï–ù–ù–´–ï –°–ò–ì–ù–ê–õ–´:")
                for signal in data['added_signals']:
                    print(f"   - {signal['symbol']} {signal['signal_type'].upper()} –∏–∑ {signal['source']}")
            
            return True
        else:
            print(f"   ‚ùå –û–®–ò–ë–ö–ê: {response.status_code}")
            try:
                error = response.json()
                print(f"   –î–µ—Ç–∞–ª–∏: {error}")
            except:
                print(f"   –¢–µ–∫—Å—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {e}")
        return False

if __name__ == "__main__":
    success = test_discover_endpoint()
    exit(0 if success else 1) 