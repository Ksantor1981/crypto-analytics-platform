#!/usr/bin/env python3
"""
–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –æ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ —Å–∏—Å—Ç–µ–º–µ
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ workers –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'workers'))

def show_detailed_real_data_channels():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–∞—Ö –∏–∑ real_data_config.py"""
    print("üîç –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–ê–ù–ê–õ–ê–•")
    print("=" * 60)
    
    try:
        from real_data_config import REAL_TELEGRAM_CHANNELS, get_active_channels, get_channels_by_category
        
        active_channels = get_active_channels()
        
        print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: {len(REAL_TELEGRAM_CHANNELS)}")
        print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {len(active_channels)}")
        print(f"   –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {len(REAL_TELEGRAM_CHANNELS) - len(active_channels)}")
        print()
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = {}
        for channel in REAL_TELEGRAM_CHANNELS:
            category = channel.get('category', 'unknown')
            if category not in categories:
                categories[category] = []
            categories[category].append(channel)
        
        print("üìÇ –ö–ê–ù–ê–õ–´ –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:")
        print("-" * 40)
        for category, channels in categories.items():
            active_count = len([ch for ch in channels if ch.get('active', False)])
            print(f"   {category.upper()}: {len(channels)} –∫–∞–Ω–∞–ª–æ–≤ ({active_count} –∞–∫—Ç–∏–≤–Ω—ã—Ö)")
        print()
        
        print("üìã –î–ï–¢–ê–õ–¨–ù–´–ô –°–ü–ò–°–û–ö –ö–ê–ù–ê–õ–û–í:")
        print("-" * 40)
        
        for i, channel in enumerate(REAL_TELEGRAM_CHANNELS, 1):
            status = "üü¢ –ê–ö–¢–ò–í–ï–ù" if channel.get('active', False) else "üî¥ –ù–ï–ê–ö–¢–ò–í–ï–ù"
            priority = channel.get('priority', 'N/A')
            success_rate = channel.get('success_rate', 0) * 100
            avg_signals = channel.get('avg_signals_per_day', 'N/A')
            confidence_mult = channel.get('confidence_multiplier', 1.0)
            
            print(f"{i:2d}. {channel['name']}")
            print(f"    üì± Username: {channel['username']}")
            print(f"    üè∑Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {channel['category']}")
            print(f"    üìà –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {priority}")
            print(f"    üéØ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {success_rate:.1f}%")
            print(f"    üìä –°–∏–≥–Ω–∞–ª–æ–≤/–¥–µ–Ω—å: {avg_signals}")
            print(f"    ‚ö° –ú–Ω–æ–∂–∏—Ç–µ–ª—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏: {confidence_mult}")
            print(f"    üåç –Ø–∑—ã–∫–∏: {', '.join(channel.get('languages', ['N/A']))}")
            print(f"    üìù –¢–∏–ø—ã —Å–∏–≥–Ω–∞–ª–æ–≤: {', '.join(channel.get('signal_types', ['N/A']))}")
            print(f"    {status}")
            print()
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def show_collector_channels():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–Ω–∞–ª—ã –∏–∑ real_telegram_collector.py"""
    print("üîç –ö–ê–ù–ê–õ–´ –ò–ó REAL_TELEGRAM_COLLECTOR.PY")
    print("=" * 50)
    
    try:
        from telegram.real_telegram_collector import RealTelegramCollector
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
        collector = RealTelegramCollector(use_real_config=False)
        
        print(f"üìä –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: {len(collector.channels)}")
        print()
        
        for i, channel in enumerate(collector.channels, 1):
            print(f"{i:2d}. {channel}")
        print()
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def show_config_channels():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–Ω–∞–ª—ã –∏–∑ telegram/config.py"""
    print("üîç –ö–ê–ù–ê–õ–´ –ò–ó TELEGRAM/CONFIG.PY")
    print("=" * 50)
    
    try:
        from telegram.config import TelegramConfig
        
        config = TelegramConfig()
        channels = config.get_active_channels()
        
        print(f"üìä –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: {len(config.channels)}")
        print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {len(channels)}")
        print()
        
        for i, channel in enumerate(config.channels, 1):
            status = "üü¢ –ê–ö–¢–ò–í–ï–ù" if channel.active else "üî¥ –ù–ï–ê–ö–¢–ò–í–ï–ù"
            print(f"{i:2d}. {channel.name}")
            print(f"    üì± Username: {channel.username}")
            print(f"    üÜî Channel ID: {channel.channel_id}")
            print(f"    üè∑Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {channel.category}")
            print(f"    {status}")
            print()
            
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def show_management_commands():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞–º–∏"""
    print("üîß –ö–û–ú–ê–ù–î–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ö–ê–ù–ê–õ–ê–ú–ò")
    print("=" * 50)
    
    print("üìù –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ì–û –ö–ê–ù–ê–õ–ê:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª: workers/real_data_config.py")
    print("2. –ù–∞–π–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ REAL_TELEGRAM_CHANNELS")
    print("3. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ:")
    print("""
    {
        "username": "@your_channel_name",
        "name": "Your Channel Display Name",
        "category": "premium",  # –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        "confidence_multiplier": 1.0,
        "active": True,
        "priority": 1,
        "languages": ["en"],
        "signal_types": ["spot", "futures"],
        "avg_signals_per_day": 10,
        "success_rate": 0.7
    }
    """)
    
    print("üìù –ò–ó–ú–ï–ù–ï–ù–ò–ï –ö–ê–ù–ê–õ–ê:")
    print("1. –ù–∞–π–¥–∏—Ç–µ –∫–∞–Ω–∞–ª –≤ REAL_TELEGRAM_CHANNELS")
    print("2. –ò–∑–º–µ–Ω–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print("   - active: True/False (–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å)")
    print("   - priority: 1-5 (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)")
    print("   - success_rate: 0.0-1.0 (—É—Å–ø–µ—à–Ω–æ—Å—Ç—å)")
    print("   - confidence_multiplier: 0.5-2.0 (–º–Ω–æ–∂–∏—Ç–µ–ª—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏)")
    
    print("üìù –£–î–ê–õ–ï–ù–ò–ï –ö–ê–ù–ê–õ–ê:")
    print("1. –ù–∞–π–¥–∏—Ç–µ –∫–∞–Ω–∞–ª –≤ —Å–ø–∏—Å–∫–µ")
    print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ active: False –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ –∑–∞–ø–∏—Å—å")
    
    print("üìù –ü–ï–†–ï–ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´:")
    print("1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∑–∞–Ω–æ–≤–æ:")
    print("   - python start_ml_service.py")
    print("   - python start_telegram_integration.py")

def show_api_endpoints():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–Ω–∞–ª–∞–º–∏"""
    print("üåê API –≠–ù–î–ü–û–ò–ù–¢–´ –î–õ–Ø –ö–ê–ù–ê–õ–û–í")
    print("=" * 40)
    
    print("üìã –û–°–ù–û–í–ù–´–ï –≠–ù–î–ü–û–ò–ù–¢–´:")
    print("1. GET /api/v1/channels - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤")
    print("2. GET /api/v1/channels/{id} - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ")
    print("3. POST /api/v1/channels - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª")
    print("4. PUT /api/v1/channels/{id} - –û–±–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª")
    print("5. DELETE /api/v1/channels/{id} - –£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª")
    print()
    
    print("üîç –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –≠–ù–î–ü–û–ò–ù–¢–´:")
    print("1. POST /api/v1/channels/discover - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–æ–≤")
    print("2. GET /api/v1/telegram/channels - Telegram –∫–∞–Ω–∞–ª—ã")
    print("3. POST /api/v1/telegram/collect - –°–±–æ—Ä —Å–∏–≥–Ω–∞–ª–æ–≤")
    print()
    
    print("üìä –î–û–°–¢–£–ü –ö API:")
    print("1. Swagger UI: http://localhost:8002/docs")
    print("2. ReDoc: http://localhost:8002/redoc")
    print("3. OpenAPI JSON: http://localhost:8002/openapi.json")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üì∫ –ü–û–î–†–û–ë–ù–´–ô –û–¢–ß–ï–¢ –û –ö–ê–ù–ê–õ–ê–• –î–õ–Ø –ü–ê–†–°–ò–ù–ì–ê")
    print("=" * 70)
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–∞—Ö
    show_detailed_real_data_channels()
    print()
    
    show_collector_channels()
    print()
    
    show_config_channels()
    print()
    
    show_management_commands()
    print()
    
    show_api_endpoints()
    print()
    
    print("üéØ –í–ê–ñ–ù–´–ï –ó–ê–ú–ï–ß–ê–ù–ò–Ø:")
    print("=" * 30)
    print("1. –û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤: workers/real_data_config.py")
    print("2. –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω—É–∂–Ω—ã Telegram API –∫–ª—é—á–∏")
    print("3. –ö–∞–Ω–∞–ª—ã –≤ –ë–î —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π")
    print("4. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ /discover —ç–Ω–¥–ø–æ–∏–Ω—Ç")
    print("5. –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã")

if __name__ == "__main__":
    main() 