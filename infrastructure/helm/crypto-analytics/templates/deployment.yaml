apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "crypto-analytics.fullname" . }}-backend
  labels:
    {{- include "crypto-analytics.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "crypto-analytics.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "crypto-analytics.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "crypto-analytics.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}-backend:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          env:
            - name: DATABASE_URL
              value: "postgresql://postgres:postgres123@{{ include "crypto-analytics.fullname" . }}-postgres:5432/crypto_analytics"
            - name: REDIS_URL
              value: "redis://{{ include "crypto-analytics.fullname" . }}-redis:6379/0"
            - name: ENVIRONMENT
              value: "production"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "crypto-analytics.fullname" . }}-secrets
                  key: secret-key
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "crypto-analytics.fullname" . }}-ml-service
  labels:
    {{- include "crypto-analytics.labels" . | nindent 4 }}
    app.kubernetes.io/component: ml-service
spec:
  replicas: {{ .Values.mlService.replicaCount }}
  selector:
    matchLabels:
      {{- include "crypto-analytics.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: ml-service
  template:
    metadata:
      labels:
        {{- include "crypto-analytics.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ml-service
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "crypto-analytics.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-ml-service
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}-ml-service:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8001
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.mlService.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.mlService.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.mlService.resources | nindent 12 }}
          env:
            - name: DATABASE_URL
              value: "postgresql://postgres:postgres123@{{ include "crypto-analytics.fullname" . }}-postgres:5432/crypto_analytics"
            - name: ENVIRONMENT
              value: "production"
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "crypto-analytics.fullname" . }}-frontend
  labels:
    {{- include "crypto-analytics.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      {{- include "crypto-analytics.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        {{- include "crypto-analytics.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "crypto-analytics.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-frontend
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}-frontend:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.frontend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.frontend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
          env:
            - name: NEXT_PUBLIC_API_URL
              value: "http://{{ include "crypto-analytics.fullname" . }}-backend:8000/api/v1"
            - name: NEXT_PUBLIC_ML_URL
              value: "http://{{ include "crypto-analytics.fullname" . }}-ml-service:8001/api/v1"
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }} 