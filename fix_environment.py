#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
"""
import os
import sys
import subprocess
from pathlib import Path

def check_python():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    print(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    print(f"Python –ø—É—Ç—å: {sys.executable}")
    print(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print(f"VIRTUAL_ENV: {os.environ.get('VIRTUAL_ENV', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')}")
    print(f"PYTHONPATH: {os.environ.get('PYTHONPATH', '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')}")

def check_packages():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã"""
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤...")
    
    packages_to_check = ['telethon', 'requests', 'sqlite3']
    
    for package in packages_to_check:
        try:
            if package == 'sqlite3':
                import sqlite3
                print(f"‚úÖ {package} - –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å")
            else:
                module = __import__(package)
                version = getattr(module, '__version__', '–≤–µ—Ä—Å–∏—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞')
                print(f"‚úÖ {package} - {version}")
        except ImportError:
            print(f"‚ùå {package} - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")

def install_packages():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã"""
    print("\nüì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤...")
    
    packages = ['telethon', 'requests']
    
    for package in packages:
        try:
            print(f"–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º {package}...")
            result = subprocess.run([
                sys.executable, '-m', 'pip', 'install', '--user', package
            ], capture_output=True, text=True, timeout=60)
            
            if result.returncode == 0:
                print(f"‚úÖ {package} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {package}: {result.stderr}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ {package}: {e}")

def test_telegram_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç Telegram"""
    print("\nüì° –¢–µ—Å—Ç Telegram –∏–º–ø–æ—Ä—Ç–∞...")
    
    try:
        import telethon
        print(f"‚úÖ Telethon –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: {telethon.__version__}")
        
        from telethon import TelegramClient
        print("‚úÖ TelegramClient –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        return True
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Telethon: {e}")
        return False

def test_telegram_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram"""
    print("\nüîó –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ .env
    env_path = Path('.env')
    if env_path.exists():
        with open(env_path, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    os.environ[key] = value
        
        api_id = os.environ.get('TELEGRAM_API_ID')
        api_hash = os.environ.get('TELEGRAM_API_HASH')
        
        if api_id and api_hash:
            print(f"‚úÖ API –¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã: {api_id}")
            return True
        else:
            print("‚ùå API –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env")
            return False
    else:
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –° –û–ö–†–£–ñ–ï–ù–ò–ï–ú")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    check_python()
    check_packages()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    install_packages()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç
    if test_telegram_import():
        print("\nüéâ Telethon —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if test_telegram_connection():
            print("üéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ –¥–ª—è —Å–±–æ—Ä–∞ –†–ï–ê–õ–¨–ù–´–• –¥–∞–Ω–Ω—ã—Ö!")
            print("\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
            print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python get_real_data.py")
            print("2. –°–æ–±–µ—Ä–∏—Ç–µ –†–ï–ê–õ–¨–ù–´–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram")
            print("3. –û–±–Ω–æ–≤–∏—Ç–µ –¥–∞—à–±–æ—Ä–¥")
        else:
            print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Telegram API –¥–∞–Ω–Ω—ã–º–∏")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å Telethon")

if __name__ == '__main__':
    main()
