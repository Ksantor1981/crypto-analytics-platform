"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
"""
import re
from signal_patterns import SignalPatterns

def test_patterns():
    """–¢–µ—Å—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤"""
    patterns = SignalPatterns()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã
    test_texts = [
        "BTC/USDT LONG 45000 TP: 47000 SL: 44000",
        "ETHUSDT short 3200 target 3000 stop 3300",
        "üöÄ BTC 45000 üìà 47000 üìâ 44000",
        "Bitcoin Long Entry: $45,000 Target: $47,000 Stop: $44,000",
        "–í—Ö–æ–¥ BTC –ª–æ–Ω–≥ 45000 —Ü–µ–ª—å 47000 —Å—Ç–æ–ø 44000"
    ]
    
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã...")
    
    for i, text in enumerate(test_texts):
        print(f"\n–¢–µ—Å—Ç {i+1}: {text}")
        
        # –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–∞—Ä
        pairs = patterns._extract_trading_pairs(text)
        print(f"  –ü–∞—Ä—ã: {pairs}")
        
        # –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        direction = patterns._extract_direction(text)
        print(f"  –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction}")
        
        # –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ü–µ–Ω
        prices = patterns._extract_prices(text)
        print(f"  –¶–µ–Ω—ã: {prices}")
        
        # –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
        signals = patterns.extract_signals_from_text(text, "test", f"msg_{i}")
        print(f"  –°–∏–≥–Ω–∞–ª—ã: {len(signals)}")
        for signal in signals:
            print(f"    - {signal}")

if __name__ == "__main__":
    test_patterns()
